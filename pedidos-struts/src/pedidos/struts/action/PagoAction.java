/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package pedidos.struts.action;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.MappingDispatchAction;

import pedidos.ejercicio.model.FormaPago;
import pedidos.ejercicio.model.PagoCheque;
import pedidos.ejercicio.model.Pedidos;
import pedidos.ejercicio.model.TarjetaCredito;
import pedidos.services.PedidosServer;
import pedidos.struts.form.PagoForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-21-2012
 * 
 * XDoclet definition:
 * @struts.action parameter="showPago" validate="true"
 */
public class PagoAction extends MappingDispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward newPago(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String fwd =null;
				
		String tipoPago=(String) request.getParameter("cbTipoPago");
		System.out.println("nuevo pago...");
		if (tipoPago.equals("cheque")){
			fwd = "goCheque";
		}else if (tipoPago.equals("tarjeta")){
			fwd = "goTarjeta";
		}
		
		PedidosServer pserver = new PedidosServer();
		Integer idPedido=new Integer(request.getParameter("cbPedidos"));
		request.setAttribute("idPedido", idPedido);
		request.setAttribute("detalle", pserver.buscarDetallePedido(idPedido).get(0));
		request.setAttribute("tipoPago", tipoPago);
		System.out.println("newPago" + tipoPago);
		return mapping.findForward(fwd);
	}
	
	public ActionForward showPago(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//CategoriaForm newCategoriaForm = (CategoriaForm) form;// TODO Auto-generated method stub
		String fwd = "goShow";
		PedidosServer pserver = new PedidosServer();		
		
		request.setAttribute("pagos", pserver.listarPagos());		
		
		System.out.println("showPago");
		return mapping.findForward(fwd);
	}
	
	public ActionForward guardarPago(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		System.out.println("Guardar...");
		
		PagoForm newPagoForm = (PagoForm) form;
		String fwd = "goShow";
		
		String tipoPago=(String) request.getParameter("tipoPago");
		PedidosServer pserver = new PedidosServer();
		SimpleDateFormat formatoDelTexto = new SimpleDateFormat("MM/dd/yyyy");
		Date fechaCheque = null;
		Date fechaPago = null;
		try {
			
			if (tipoPago.equals("cheque")){
				fechaCheque = formatoDelTexto.parse(request.getParameter("fechaCheque"));
				fechaPago = formatoDelTexto.parse(newPagoForm.getFechaPago());
				Integer idPedido=new Integer( request.getParameter("idPedido"));
				Pedidos p = pserver.buscarPedido(idPedido);
				PagoCheque pc= new PagoCheque(new Integer(request.getParameter("numeroCheque")),
												request.getParameter("tbBanco"),
												request.getParameter("numeroCuenta"), fechaCheque	);
				
				pc.setMonto(newPagoForm.getMonto());
				pc.setPropietario(newPagoForm.getPropietario());
				pc.setPedidos(p);
				pc.setFechaPago(fechaPago);
				p.setEstatus("Finalizado");
				pserver.crearPagoCheque(pc);	
				request.setAttribute("pagoCheque", pc);
				System.out.println("guardarPago Pedido ID: " + idPedido );
				
			}else if (tipoPago.equals("tarjeta")){
				
				fechaPago = formatoDelTexto.parse(newPagoForm.getFechaPago());
				Integer idPedido=new Integer( request.getParameter("idPedido"));
				Pedidos p = pserver.buscarPedido(idPedido);
				TarjetaCredito tc= new TarjetaCredito(new Integer(request.getParameter("numeroTarjeta")),
														new Integer(request.getParameter("mesVence")),
														new Integer(request.getParameter("anyoVence")), 
														request.getParameter("tbBanco"));
				
				tc.setMonto(newPagoForm.getMonto());
				tc.setPropietario(newPagoForm.getPropietario());
				tc.setPedidos(p);
				tc.setFechaPago(fechaPago);
				p.setEstatus("Finalizado");
				pserver.crearPagoTarjetaCredito(tc);	
				request.setAttribute("pagoTarjeta", tc);
				System.out.println("guardarPago Pedido ID: " + idPedido );
			}
			
			
			} catch (ParseException ex) {
			ex.printStackTrace();
			}
		
		return mapping.findForward(fwd);
		
		
	}
	
	public ActionForward deletePago(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String fwd = "goShow";
		PedidosServer pserver = new PedidosServer();
		FormaPago pag = pserver.buscarPago(new Integer(request.getParameter("id")));
		pserver.deletePago(pag);
		System.out.println("deletePago");
		return mapping.findForward(fwd);
	}
	
}